[
    {
        "id": "question0",
        "type": "openQuestions",
        "result": null
    },
    {
        "id": "question1,",
        "type": "variable,",
        "name": "IssuingMemberState,",
        "result": [
            "italy",
            "bulgaria",
            "france",
            "poland"
        ]
    },
    {
        "id": "question1,",
        "type": "predicate,",
        "result": "issuing_proceeding(IssuingMemberState, PersonId, Offence)"
    },
    {
        "id": "question2,",
        "type": "variable,",
        "name": "ExecutingMemberState,",
        "result": [
            "italy",
            "bulgaria",
            "france",
            "poland"
        ]
    },
    {
        "id": "question3,",
        "type": "predicate,",
        "result": "art2applies(Offence)"
    },
    {
        "id": "question5,",
        "type": "predicate,",
        "result": [
            "executing_proceeding(ExecutingMemberState, PersonId, criminal_prosecution)",
            "executing_proceeding(ExecutingMemberState, PersonId, execution_custodial_sentence)",
            "executing_proceeding(ExecutingMemberState, PersonId, execution_detention_order)"
        ]
    },
    {
        "id": "question6,",
        "type": "predicate,",
        "result": "amnesty(Offence, ExecutingMemberState)"
    },
    {
        "id": "question7",
        "type": "variable",
        "name": "PersonId",
        "result": "freeText"
    },
    {
        "id": "question8",
        "type": "variable",
        "name": "Nationality",
        "result": [
            "italy",
            "bulgaria",
            "france",
            "poland"
        ]
    },
    {
        "id": "question8",
        "type": "predicate",
        "result":"person_nationality(PersonId, Nationality)"
    },
    {
        "id": "question9",
        "type": "variable",
        "name": "Age",
        "result": "freeText"
    },
    {
        "id": "question9",
        "type": "predicate",
        "result":"person_age(PersonId, Age)"
    },
    {
        "id": "question10",
        "type": "variable",
        "name": "Offence",
        "result": [
            "theft",
            "driving without license",
            "altri reati"
        ]
    },
    {
        "id": "question10",
        "type": "predicate",
        "result": "crime_type(Offence, committed_in(CommIn))"
    },
    {
        "id": "question11",
        "type": "variable",
        "name": "CommIn",
        "result": [
            "Italy",
            "Bulgaria",
            "France",
            "Poland"
        ]
    },
    {
        "id": "question12",
        "type": "predicate",
        "result": "national_law_not_offence(Offence, ExecutingMemberState)"
    },
    {
        "id": "question13",
        "type": "variable",
        "name": "Measure",
        "result": "freeText"
    },
    {
        "id": "question15",
        "type": "variable",
        "name": "Measure",
        "result": "interception_of_telecommunications"
    },
    {
        "id": "question15",
        "type": "predicate",
        "result": "art694_29_applies(interception_of_telecommunications)"
    },
    {
        "id": "question16",
        "type": "predicate",
        "result":{
            "(a)": "art4_a_applies",
            "(b)": "art4_b_applies",
            "(c)": "art4_c_applies",
            "(d)": "art4_d_applies"
        }
    },
    {
        "id": "question18",
        "type": "variable",
        "name": "IssuingAut",
        "result": [
            "judge or court",
            "investigating judge",
            "public prosecutor"
        ]
    },
    {
        "id": "question18",
        "type": "predicate",
        "result": "issuing_authority(Measure, IssuingAut, ExecutingMemberState)"
    },
    {
        "id": "question19",
        "type": "variable",
        "name": "ValidatingAut",
        "result": [
            "judge or court",
            "investigating judge",
            "public prosecutor"
        ]
    },
    {
        "id": "question19",
        "type": "predicate",
        "result": "validating_authority(Measure, ValidatingAut)"
    }
]

